---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'RStudio Team Standalone'

Parameters:
  useVPC:
    Type: AWS::EC2::VPC::Id
    Description: "VPC to deploy the cluster into."
  useSubnet:
    Type: AWS::EC2::Subnet::Id
    Description: "Subnet to deploy the cluster into. Must be in the selected VPC."
  cidrIpHTTP:
    Type: String
    Description: "Security groups CIDR range for ports 80 and 443."
    Default: "0.0.0.0/0"
  cidrIpSSH:
    Type: String
    Description: "Security groups CIDR range for port 22."
    Default: "0.0.0.0/0"
  keyName:
    Type: AWS::EC2::KeyPair::KeyName
    AllowedPattern: ".+"
    ConstraintDescription: Must select an existing EC2 KeyPair
    Description: "AWS key pair to use to SSH to the VMs. SSH username for the VMs are ubuntu (has sudo privilege). SSH into machines for changing configuration, reviewing logs, etc."
  rswInstanceType:
    Type: String
    Default: m5.large
    AllowedValues:
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.8xlarge
      - r5.12xlarge
      - r5.16xlarge
      - r5.24xlarge
    Description: EC2 Instance type for RStudio Workbench. Default is m5.large.
  rswDiskSize:
    Type: Number
    Default: 50
    MinValue: 50
    Description: Volume size for RStudio Workbench EC2 Instance. Min 50 GB.
  rscInstanceType:
    Type: String
    Default: m5.large
    AllowedValues:
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.8xlarge
      - r5.12xlarge
      - r5.16xlarge
      - r5.24xlarge
    Description: EC2 Instance type for RStudio Connect. Default is m5.large.
  rscDiskSize:
    Type: Number
    Default: 50
    MinValue: 50
    Description: Volume size for RStudio Connect EC2 Instance. Min 50 GB.
  rspmInstanceType:
    Type: String
    Default: m5.large
    AllowedValues:
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.8xlarge
      - r5.12xlarge
      - r5.16xlarge
      - r5.24xlarge
    Description: EC2 Instance type for RStudio Package Manager. Default is m5.large.
  rspmDiskSize:
    Type: Number
    Default: 120
    MinValue: 120
    Description: Volume size for RStudio Package Manager EC2 Instance. Min 120 GB.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: Global Network configuration
        Parameters:
          - useVPC
          - useSubnet
          - cidrIpHTTP
          - cidrIpSSH
      -
        Label:
          default: Global EC2 resource configuration
        Parameters:
          - keyName
      -
        Label:
          default: RStudio Workbench EC2 resource configuration
        Parameters:
          - rswInstanceType
          - rswDiskSize
      -
        Label:
          default: RStudio Connect EC2 resource configuration
        Parameters:
          - rscInstanceType
          - rscDiskSize
      -
        Label:
          default: RStudio Package Manager EC2 resource configuration
        Parameters:
          - rspmInstanceType
          - rspmDiskSize
    ParameterLabels:
      useSubnet:
        default: "Deploy to Subnet"
      useVPC:
        default: "Deploy to VPC"
      cidrIpHTTP:
        default: "Security group CIDR Range for HTTP/HTTPS"
      cidrIpSSH:
        default: "Security group CIDR Range for SSH"
      useVPC:
        default: "Deploy to VPC"
      keyName:
        default : "AWS keypair"
      rswInstanceType:
        default : "RStudio Workbench Instance Type"
      rswDiskSize:
        default : "RStudio Workbench Disk Size"
      rscInstanceType:
        default : "RStudio Connect Instance Type"
      rscDiskSize:
        default : "RStudio Connect Disk Size"
      rspmInstanceType:
        default : "RStudio Package Manager Instance Type"
      rspmDiskSize:
        default : "RStudio Package Manager Disk Size"

Mappings:
  RSWRegionMap:
    ap-northeast-1:
      AMI: ami-0400ffd16cda0e53d
    ap-northeast-2:
      AMI: ami-033544f197fd94050
    ap-south-1:
      AMI: ami-02802dc9a582fcb0d
    ap-southeast-1:
      AMI: ami-013d74602f69399f0
    ap-southeast-2:
      AMI: ami-07e0c5d55d521645c
    eu-central-1:
      AMI: ami-04a38162e3d74331a
    eu-north-1:
      AMI: ami-0bece7227d8a82425
    eu-west-1:
      AMI: ami-09114541f8e41efb8
    eu-west-2:
      AMI: ami-02bc9099865ca25bb
    eu-west-3:
      AMI: ami-0bccdef5ee0449395
    us-east-1:
      AMI: ami-04bd6989dfa69be83
    us-east-2:
      AMI: ami-0f04b1190df907fde
    us-west-1:
      AMI: ami-06f711a4856dacbdb
    us-west-2:
      AMI: ami-02de5980f62e1277e

  RSCRegionMap:
    eu-central-1:
      AMI: ami-0fc53eb59f4b17110
    eu-north-1:
      AMI: ami-013ece7f61c627534
    eu-west-1:
      AMI: ami-0023b14125e28c11a
    eu-west-2:
      AMI: ami-0a46e8a8218a40a47
    eu-west-3:
      AMI: ami-0df7d98d66e84b834
    us-east-1:
      AMI: ami-0925289e48c7e041c
    us-east-2:
      AMI: ami-0a60db9be2f0c148b
    us-west-1:
      AMI: ami-0369e3b663d1b9032
    us-west-2:
      AMI: ami-0a8a6e13f238b4bcd
    ap-northeast-1:
      AMI: ami-02dac8221b546b333
    ap-northeast-2:
      AMI: ami-003570525ed0d4172
    ap-south-1:
      AMI: ami-05a5d804f3698a0ab
    ap-southeast-1:
      AMI: ami-00e116136c8ac5563
    ap-southeast-2:
      AMI: ami-0b46b11c2b1a84a27

  RSPMRegionMap:
    eu-central-1:
      AMI: ami-078161336b35798d2
    eu-north-1:
      AMI: ami-067225336df869b84
    eu-west-1:
      AMI: ami-06f89ac71be16f3c0
    eu-west-2:
      AMI: ami-0f55fbbb61e294004
    eu-west-3:
      AMI: ami-04beed3dc1066d79b
    us-east-1:
      AMI: ami-05bcd1624763edb6d
    us-east-2:
      AMI: ami-0b56f184c0b9c081a
    us-west-1:
      AMI: ami-078e22c833d1b41e9
    us-west-2:
      AMI: ami-031669f9b2ac511ae
    ap-northeast-1:
      AMI: ami-0c34049f10b9d1728
    ap-northeast-2:
      AMI: ami-01425492ce409f256
    ap-south-1:
      AMI: ami-0536674dff3cd3bc0
    ap-southeast-1:
      AMI: ami-0000c47a0cdfc3180
    ap-southeast-2:
      AMI: ami-06f37890301137a87

Resources:
  RSWInstance:
    Type: AWS::EC2::Instance
    DependsOn:
      - RSCInstance
      - RSPMInstance
    CreationPolicy:
      ResourceSignal:
        Timeout: PT10M
    Properties:
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref "AWS::StackName", "RStudioServerPro"]]
      ImageId: !FindInMap [RSWRegionMap, !Ref "AWS::Region", AMI]
      KeyName: !Ref keyName
      InstanceType: !Ref rswInstanceType
      NetworkInterfaces:
        - DeleteOnTermination: "true"
          AssociatePublicIpAddress: "true"
          DeviceIndex: 0
          SubnetId: !Ref useSubnet
          GroupSet: [!Ref RSWSecurityGroup]
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: !Ref rscDiskSize
            DeleteOnTermination: true
            VolumeType: gp2
      UserData:
        Fn::Base64: !Sub
          - |
            #!/bin/bash -xe
            exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
            
            export DEBIAN_FRONTEND=noninteractive
            
            apt-get update -y
            apt-get upgrade -y

            apt-get install -y python-pip python-setuptools
            mkdir -p /opt/aws/bin
            python /usr/lib/python2.7/dist-packages/easy_install.py --script-dir /opt/aws/bin https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz
            
            trap '/opt/aws/bin/cfn-signal --exit-code 1 --resource RSWInstance --region ${AWS::Region} --stack ${AWS::StackName}' ERR

            RSESSION_CONFIG_FILE=/etc/rstudio/rsession.conf
            echo "default-rsconnect-server=http://${RSC_IP}" >> $RSESSION_CONFIG_FILE

            REPOS_CONFIG_FILE=/etc/rstudio/repos.conf
            echo "CRAN=http://${RSPM_IP}/cran/__linux__/bionic/latest" >> $REPOS_CONFIG_FILE
            
            RSERVER_CONFIG_FILE=/etc/rstudio/rserver.conf 
            echo "www-port=80" >> $RSERVER_CONFIG_FILE

            PIP_CONFIG_FILE=/etc/pip.conf
            cat << EOF > $PIP_CONFIG_FILE
            [global]
            timeout = 60
            index-url = http://${RSPM_IP}/pypi/latest/simple
            EOF
            
            # Start Sessions
            /opt/R/3.6.3/bin/R --version
            /opt/R/3.6.3/bin/R --no-save -e "library(dplyr)"
            /opt/Python/3.8.9/bin/python3 --version
            /opt/Python/3.8.9/bin/python3 -c "import math"

            # Verify
            systemctl enable rstudio-server
            systemctl enable rstudio-launcher
            systemctl restart rstudio-server
            systemctl restart rstudio-launcher
            
            # Create first user
            user_passwd=$(curl http://169.254.169.254/latest/meta-data/instance-id)
            sudo useradd -m -p $(openssl passwd -crypt $user_passwd) rstudio-user
            unset user_passwd
            
            # Download Wait for It
            curl -L -o /usr/local/bin/wait-for-it.sh https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh
            chmod +x /usr/local/bin/wait-for-it.sh

            /usr/local/bin/wait-for-it.sh localhost:80 -t 60
            rstudio-server stop
            sleep 10
            rstudio-server verify-installation --verify-user rstudio-user || true
            sleep 10
            rstudio-server restart

            /usr/local/bin/wait-for-it.sh localhost:80 -t 60
            /opt/aws/bin/cfn-signal --exit-code 0 --resource RSWInstance --region ${AWS::Region} --stack ${AWS::StackName}

          - RSC_IP: !GetAtt RSCInstance.PublicIp
            RSPM_IP: !GetAtt RSPMInstance.PublicIp

  RSWSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: RStudio Workbench Access
      VpcId: !Ref useVPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: !Ref cidrIpSSH
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: !Ref cidrIpHTTP
      - IpProtocol: tcp
        FromPort: '443'
        ToPort: '443'
        CidrIp: !Ref cidrIpHTTP

  RSWSecurityGroupSelfIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref RSWSecurityGroup
      IpProtocol: -1
      SourceSecurityGroupId: !Ref RSWSecurityGroup

  RSCInstance:
    Type: AWS::EC2::Instance
    DependsOn:
      - RSPMInstance
    CreationPolicy:
      ResourceSignal:
        Timeout: PT10M
    Properties:
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref "AWS::StackName", "RStudioConnect"]]
      ImageId: !FindInMap [RSCRegionMap, !Ref "AWS::Region", AMI]
      KeyName: !Ref keyName
      InstanceType: !Ref rscInstanceType
      NetworkInterfaces:
        - DeleteOnTermination: "true"
          AssociatePublicIpAddress: "true"
          DeviceIndex: 0
          SubnetId: !Ref useSubnet
          GroupSet: [!Ref RSCSecurityGroup]
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: !Ref rscDiskSize
            DeleteOnTermination: true
            VolumeType: gp2
      UserData:
        Fn::Base64: !Sub
          - |
            #!/bin/bash -xe
            exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
            
            export DEBIAN_FRONTEND=noninteractive

            apt-get update -y
            apt-get upgrade -y

            apt-get install -y python-pip python-setuptools
            mkdir -p /opt/aws/bin
            python /usr/lib/python2.7/dist-packages/easy_install.py --script-dir /opt/aws/bin https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz

            trap '/opt/aws/bin/cfn-signal --exit-code 1 --resource RSCInstance --region ${AWS::Region} --stack ${AWS::StackName}' ERR

            CONNECT_CONFIG_FILE=/etc/rstudio-connect/rstudio-connect.gcfg

            sed -i -e 's/Listen = \":3939\"/Listen = \":80\"/g' $CONNECT_CONFIG_FILE

            echo "[RPackageRepository \"CRAN\"]" >> $CONNECT_CONFIG_FILE
            echo "URL = http://${RSPM_IP}/cran/__linux__/bionic/latest" >> $CONNECT_CONFIG_FILE
            
            ip_addr=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)
            sed -i -e "s/Address = http:\/\/example.com/Address = http:\/\/$ip_addr/g" $CONNECT_CONFIG_FILE

            PIP_CONFIG_FILE=/etc/pip.conf
            cat << EOF > $PIP_CONFIG_FILE
            [global]
            timeout = 60
            index-url = http://${RSPM_IP}/pypi/latest/simple
            EOF

            systemctl restart rstudio-connect

            curl -L -o /usr/local/bin/wait-for-it.sh https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh
            chmod +x /usr/local/bin/wait-for-it.sh

            /usr/local/bin/wait-for-it.sh localhost:80 -t 60
            /opt/aws/bin/cfn-signal --exit-code 0 --resource RSCInstance --region ${AWS::Region} --stack ${AWS::StackName}

          - RSPM_IP: !GetAtt RSPMInstance.PublicIp

  RSCSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: RStudio Connect Access
      VpcId: !Ref useVPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: !Ref cidrIpSSH
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: !Ref cidrIpHTTP
      - IpProtocol: tcp
        FromPort: '443'
        ToPort: '443'
        CidrIp: !Ref cidrIpHTTP

  RSCSecurityGroupSelfIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref RSCSecurityGroup
      IpProtocol: -1
      SourceSecurityGroupId: !Ref RSCSecurityGroup

  RSPMInstance:
    Type: AWS::EC2::Instance
    CreationPolicy:
      ResourceSignal:
        Timeout: PT1H
    Properties:
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref "AWS::StackName", "RStudioPM"]]
      ImageId: !FindInMap [RSPMRegionMap, !Ref "AWS::Region", AMI]
      KeyName: !Ref keyName
      InstanceType: !Ref rspmInstanceType
      NetworkInterfaces:
        - DeleteOnTermination: "true"
          AssociatePublicIpAddress: "true"
          DeviceIndex: 0
          SubnetId: !Ref useSubnet
          GroupSet: [!Ref RSPMSecurityGroup]
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: !Ref rspmDiskSize
            DeleteOnTermination: true
            VolumeType: gp2
      UserData:
        Fn::Base64: !Sub |
            #!/bin/bash -xe
            exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
            trap '/usr/local/bin/cfn-signal --exit-code 1 --resource RSPMInstance --region ${AWS::Region} --stack ${AWS::StackName}' ERR
            
            sed -i -e "s/Listen = :4242/Listen = :80/g" /etc/rstudio-pm/rstudio-pm.gcfg
            setcap 'cap_net_bind_service=+ep' /opt/rstudio-pm/bin/rstudio-pm
            sleep 10

            systemctl enable rstudio-pm
            systemctl restart rstudio-pm

            # Creates CRAN repository
            alias rspm='/opt/rstudio-pm/bin/rspm'
            rspm create repo --name=cran --description='Access CRAN packages'
            rspm subscribe --repo=cran --source=cran
            rspm sync --type=cran

            # Creates PyPI repository
            rspm create repo --name=pypi --type=python --description='Access PyPI packages'
            rspm subscribe --repo=pypi --source=pypi
            rspm sync --type=pypi
            
            /usr/local/bin/wait-for-it.sh localhost:80 -t 60
            /usr/local/bin/cfn-signal --exit-code 0 --resource RSPMInstance --region ${AWS::Region} --stack ${AWS::StackName}

  RSPMSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: RStudio Package Manager Access
      VpcId: !Ref useVPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: !Ref cidrIpSSH
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: !Ref cidrIpHTTP
      - IpProtocol: tcp
        FromPort: '443'
        ToPort: '443'
        CidrIp: !Ref cidrIpHTTP

  RSPMSecurityGroupSelfIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref RSPMSecurityGroup
      IpProtocol: -1
      SourceSecurityGroupId: !Ref RSPMSecurityGroup

Outputs:
  RSWHost:
    Description: RStudio Workbench UI
    Value: !Join [ "", ["http://", !GetAtt RSWInstance.PublicIp]]
  RSWDefaultUser:
    Description: RStudio Workbench default user
    Value: rstudio-user
  RSWDefaultPassword:
    Description: RStudio Workbench initial default user password
    Value: !Ref RSWInstance
  RSCHost:
    Description: RStudio Connect UI
    Value: !Join [ "", ["http://", !GetAtt RSCInstance.PublicIp]]
  RSPMHost:
    Description: RStudio Package Manager UI
    Value: !Join [ "", ["http://", !GetAtt RSPMInstance.PublicIp]]
